students3 %>%
gather(class, -name, class1:class5 ,na.rm = TRUE) %>%
print
#
students3 %>%
gather(class, class1:class5 ,-name, -test,na.rm = TRUE) %>%
print
submit()
students3 %>%
gather(class, grade, class1:class5 ,-name, -test,na.rm = TRUE) %>%
print
submit()
?spread?
?
?spread
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread( name,test ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread( test,name ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(class,grade ) %>%
print
#
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(name,test ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test,c("final", "midterm") ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, class ) %>%
print
gather(class, grade, class1:class5, na.rm = TRUE)
gather(students3, class, grade, class1:class5, na.rm = TRUE)
submit()
submit()
gather(class, grade, class1:class5, na.rm = TRUE)
gather(students3, class, grade, class1:class5, na.rm = TRUE)
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test) %>%
print
submit()
library(readr)
parse_number("class5")
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class)) %>%
print
submit()
View(students4)
students4
submit()
submit()
submit()
passed
faild
failed
passed <- mutate(passes, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
sat %>%
select(-contains("total"))
sat %>%
select(-contains("total")) %>%
gather(part_sex, sex, -score_range)
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day'')
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment < now()
this moment <- now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_Date <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_Moment <- update(now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 7, minutes = 39, seconds = 0)
this_moment <- now()
this_moment
this_moment <- update(this_moment, hours = 7, minutes = 39, seconds = 0)
this_Moment <- update(this_Moment, hours = 10, minutes = 16, seconds = 0)
info()
skip()
exit()
bye()
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'gross_product.csv')
df_gp <- read.csv('gross_product.csv', skip=3, col.names = c('CountryCode', 'Ranking', 'X', 'Economy',
'US.Dollars.', 'X1', 'X2', 'X3', 'X4', 'X5'))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'edu.csv')
df_edu <- read.csv('edu.csv')
View(df_gp)
df_gp$X <- NULL
df_gp$X1 <-- NULL
df_gp$X2 <-- NULL
df_gp$X3 <-- NULL
df_gp$X4 <-- NULL
df_gp$X5 <-- NULL
df_gp$X.1 <-- NULL
df_gp$X.2 <-- NULL
df_gp$X.3 <-- NULL
df_gp$X.4 <-- NULL
df_gp$X.5 <-- NULL
df_gp$X1 <- NULL
df_gp$X2 <- NULL
df_gp$X3 <- NULL
df_gp$X4 <- NULL
df_gp$X5 <- NULL
df_gp <- filter(df_gp, Ranking != "")
df_gp <- filter(df_gp, "Ranking" != "")
#download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'gross_product.csv')
df_gp <- read.csv('gross_product.csv', skip=3, col.names = c('CountryCode', 'Ranking', 'X', 'Economy',
'US.Dollars.', 'X1', 'X2', 'X3', 'X4', 'X5'))
#download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'edu.csv')
df_edu <- read.csv('edu.csv')
df_gp$X <- NULL
df_gp$X1 <- NULL
df_gp$X2 <- NULL
df_gp$X3 <- NULL
df_gp$X4 <- NULL
df_gp$X5 <- NULL
df_gp <- filter(df_gp, Ranking != "")
library(dplyr)
df_gp <- filter(df_gp, Ranking != "")
df_gp <- filter(df_gp, Ranking != "")
df_gp <- filter(df_gp, Ranking != "" & Countrycode != "")
df_gp <- filter(df_gp, Ranking != "" & CountryCode != "")
View(df_edu)
df_edu <- filter(df_edu, region != "")
df_edu <- filter(df_edu, Region != "")
df <- merge(df_gp, df_edu)
View(df)
library(Swirl)
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
hc
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
swirl()
library(swirl)
swirl()
swirl()
swirl()
di
dist()
x <- 1
dist(dataFrame)
remove.packages("swirl'")
remove.packages("Swirl'")
library(swirl)
uninstall_course("Exploratory Data Analysis")
install_course("Exploratory Data Analysis")
swirl()
remove.packages("swirl")
library(swirl)
swirl()
remove.packages("swirl")
swirl()
library(swirl)
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
a <- 1
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
bline(h=.4, col="red")
abline(h=.4, col="red")
5
11
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(dnmt)
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2, mean)
tapply(y,newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
e<-1
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%matv
matu*diag*matv
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- 1
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
swirl()
library(swirl)
swirl()
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering < hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale([,-c(562,563)]))
svd1 <- svd(scale([,-c(562,563)])
k <- 1
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,1:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1)
kClust <- 1
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- kClust$size==49
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
library(dplyr)
library(ggplot2)
df <- data <- read.table("activity.zip")
df <- data <- read.table("./activity.zip")
setwd('C:\Users\ldewit\Documents\coursera_local\Reproducible_Research\RepData_PeerAssessment1')
setwd('C:/Users/ldewit\Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1')
setwd("C:/Users/ldewit/Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1")
df <- data <- read.table("./activity.zip")
View(df)
temp <- tempfile("Activity", fileext=c(".zip"))
data <- read.table(unz(temp, "Activity.csv"), sep=",")
setwd("C:/Users/ldewit/Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1")
temp <- tempfile("Activity", fileext=c(".zip"))
data <- read.table(unz(temp, "Activity.csv"), sep=",")
temp <- tempfile("activity", fileext=c(".zip"))
data <- read.table(unz(temp, "activity.csv"), sep=",")
setwd("C:/Users/ldewit/Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1")
temp <- tempfile("activity", fileext=c(".zip"))
data <- read.table(unz(temp, "activity.csv"), sep=",")
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
setwd("C:/Users/ldewit/Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1")
temp <- tempfile("activity", fileext=c(".zip"))
library(dplyr)
library(ggplot2)
setwd("C:/Users/ldewit/Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1")
unzip('activity.zip', c("activity.csv"))
data <- read.table("activity.csv", sep=",")
View(data)
data <- read.table("activity.csv", sep=",", skip = 1)
data <- read.table("activity.csv", sep=",", header = TRUE)
data_mean_steps <- group_by(data, data$date) %>% mean(steps, na.rm = TRUE)
## Preparing data for analysis
data$steps <- as.numeric(data$steps)
data_mean_steps <- group_by(data, data$date) %>% mean(steps, na.rm = TRUE)
setwd("C:/Users/ldewit/Documents/coursera_local/Reproducible_Research/RepData_PeerAssessment1")
typeof(data$steps)
class(data$steps)
data_mean_steps <- group_by(data, data$date)
View(data_mean_steps)
data_mean_steps <- data %<% group_by(date) %>% mean(steps, na.rm = TRUE)
## Mean total number of steps taken per day
data_mean_steps <- data %>% group_by(date) %>% mean(steps, na.rm = TRUE)
## Mean total number of steps taken per day
data_mean_steps <- data %>% group_by(date)
View(data_mean_steps)
## Mean total number of steps taken per day
data %>%
group_by(date) %>%
summarise_at(steps), funs(mean(., na.rm=TRUE)))
## Mean total number of steps taken per day
grp <- group_by(data, Date)
summarise(grp, mean=mean(steps))
grp <- group_by(data, date)
summarise(grp, mean=mean(steps))
grp <- group_by(data, date)
hist(summarise(grp, mean=mean(steps)))
summarise(grp, mean=mean(steps))
summarise(grp, mean=mean(steps))$date
hist(summarise(grp, mean=mean(steps))$mean, summarise(grp, mean=mean(steps))$date)
summarise(grp, mean_steps=mean(steps))
grp_summarise <- summarise(grp, mean_steps=mean(steps))
class(grp_summarise$mean_steps)
class(grp_summarise$date)
hist(grp_summarise$mean_steps, grp_summarise$date)
data$date <- as.Date(data$date)
grp <- group_by(data, date)
grp_summarise <- summarise(grp, mean_steps=mean(steps))
hist(grp_summarise$mean_steps, grp_summarise$date)
View(grp_summarise)
hist(grp_summarise$mean_steps, grp_summarise$date, na.rm=TRUE)
hist(grp_summarise)
range(grp_summarise$mean_steps)
## Preparing data for analysis
data$steps <- as.numeric(data$steps, na.rm=TRUE)
data$date <- as.Date(data$date)
## Mean total number of steps taken per day
grp <- group_by(data, date)
grp_summarise <- summarise(grp, mean_steps=mean(steps))
data$steps[is.na(data$steps)] <- 0
grp <- group_by(data, date)
grp_summarise <- summarise(grp, mean_steps=mean(steps))
hist(grp_summarise)
hist(grp_summarise$mean_steps, grp_summarise$date)
range(grp_summarise$mean_steps)
data <- read.table("activity.csv", sep=",", header = TRUE)
data <- read.table("activity.csv", sep=",", header = TRUE)
data <- na.omit(data)
## Preparing data for analysis
data$steps <- as.numeric(data$steps)
data$date <- as.Date(data$date)
## Mean total number of steps taken per day
grp <- group_by(data, date)
grp_summarise <- summarise(grp, mean_steps=mean(steps))
hist(grp_summarise$mean_steps, grp_summarise$date)
range(grp_summarise$mean_steps)
hist(grp_summarise$mean_steps, grp_summarise$date, breaks = seq(0, 80, by = 5))
p <- ggplot(grp_summarise, aes(num, ..count..))
p <- p + geom_histogram(binwidth = bin, colour="white")
## Creating a histogram
p <- ggplot(grp_summarise, aes(num, ..count..))
p <- p + geom_histogram(binwidth = 60, colour="white")
p
p <- ggplot(grp_summarise, aes(steps, date))
p <- p + geom_histogram(binwidth = 60, colour="white")
p
p <- ggplot(grp_summarise, aes(mean_steps, date))
p <- p + geom_histogram(binwidth = 60, colour="white")
p
## Creating a histogram
p <- ggplot(grp_summarise, aes(mean_steps, date))
p <- p + geom_histogram(colour="white")
p
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
data <- read.table("activity.csv", sep=",", header = TRUE)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
steps.day.df <- activity.data %>%
group_by(date) %>%
summarise(steps = sum(steps))
mean.median.steps <- steps.day.df %>%
summarise(
Mean = round(mean(steps, na.rm = TRUE)),
Median = round(median(steps, na.rm = TRUE))
) %>%
gather()
ggplot(data = steps.day.df,
mapping = aes(x = steps,
y = ..density..)) +
geom_histogram(aes(weight = steps),
fill = "steelblue",
colour = "white",
alpha = 0.8) +
geom_density(fill = "steelblue",
colour = NA,
alpha = 0.2) +
ggtitle(list(
title = "Total Number of Steps",
subtitle = "Distribution of Total Number of Steps Taken Each Day",
x = "Steps",
y = "Density")) +
geom_vline(data = mean.median.steps,
aes(xintercept = value, linetype = key),
size = 0.5,
alpha = 0.8,
colour = c("salmon", "royalblue")) +
scale_linetype_discrete(name = "Number of Steps") +
theme_bw()
steps.day.df <- data %>%
group_by(date) %>%
summarise(steps = sum(steps))
mean.median.steps <- steps.day.df %>%
summarise(
Mean = round(mean(steps, na.rm = TRUE)),
Median = round(median(steps, na.rm = TRUE))
) %>%
gather()
ggplot(data = steps.day.df,
mapping = aes(x = steps,
y = ..density..)) +
geom_histogram(aes(weight = steps),
fill = "steelblue",
colour = "white",
alpha = 0.8) +
geom_density(fill = "steelblue",
colour = NA,
alpha = 0.2) +
ggtitle(list(
title = "Total Number of Steps",
subtitle = "Distribution of Total Number of Steps Taken Each Day",
x = "Steps",
y = "Density")) +
geom_vline(data = mean.median.steps,
aes(xintercept = value, linetype = key),
size = 0.5,
alpha = 0.8,
colour = c("salmon", "royalblue")) +
scale_linetype_discrete(name = "Number of Steps") +
theme_bw()
hist(data$steps,col="red",xlab="",main="Histogram of Steps")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
